/*
 * generated by Xtext 2.12.0
 */
grammar InternalBugsDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.opcoach.bugsy.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.opcoach.bugsy.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.opcoach.bugsy.xtext.services.BugsDslGrammarAccess;

}

@parser::members {

 	private BugsDslGrammarAccess grammarAccess;

    public InternalBugsDslParser(TokenStream input, BugsDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "BugsModel";
   	}

   	@Override
   	protected BugsDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleBugsModel
entryRuleBugsModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBugsModelRule()); }
	iv_ruleBugsModel=ruleBugsModel
	{ $current=$iv_ruleBugsModel.current; }
	EOF;

// Rule BugsModel
ruleBugsModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBugsModelAccess().getBugsModelAction_0(),
					$current);
			}
		)
		otherlv_1='model'
		{
			newLeafNode(otherlv_1, grammarAccess.getBugsModelAccess().getModelKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBugsModelAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBugsModelAccess().getInstructionsInstructionParserRuleCall_3_0());
				}
				lv_instructions_3_0=ruleInstruction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBugsModelRule());
					}
					add(
						$current,
						"instructions",
						lv_instructions_3_0,
						"com.opcoach.bugsy.xtext.BugsDsl.Instruction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getBugsModelAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleInstruction
entryRuleInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionRule()); }
	iv_ruleInstruction=ruleInstruction
	{ $current=$iv_ruleInstruction.current; }
	EOF;

// Rule Instruction
ruleInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getForParserRuleCall_0());
		}
		this_For_0=ruleFor
		{
			$current = $this_For_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getRelationParserRuleCall_1());
		}
		this_Relation_1=ruleRelation
		{
			$current = $this_Relation_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFor
entryRuleFor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForRule()); }
	iv_ruleFor=ruleFor
	{ $current=$iv_ruleFor.current; }
	EOF;

// Rule For
ruleFor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getForAccess().getForAction_0(),
					$current);
			}
		)
		otherlv_1='for'
		{
			newLeafNode(otherlv_1, grammarAccess.getForAccess().getForKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getForAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				lv_variable_3_0=RULE_ID
				{
					newLeafNode(lv_variable_3_0, grammarAccess.getForAccess().getVariableIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForRule());
					}
					setWithLastConsumed(
						$current,
						"variable",
						lv_variable_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='in'
		{
			newLeafNode(otherlv_4, grammarAccess.getForAccess().getInKeyword_4());
		}
		(
			(
				lv_low_5_0=RULE_INT
				{
					newLeafNode(lv_low_5_0, grammarAccess.getForAccess().getLowINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForRule());
					}
					setWithLastConsumed(
						$current,
						"low",
						lv_low_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getForAccess().getColonKeyword_6());
		}
		(
			(
				lv_high_7_0=RULE_ID
				{
					newLeafNode(lv_high_7_0, grammarAccess.getForAccess().getHighIDTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForRule());
					}
					setWithLastConsumed(
						$current,
						"high",
						lv_high_7_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getForAccess().getRightParenthesisKeyword_8());
		}
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getForAccess().getLeftCurlyBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForAccess().getContentsInstructionParserRuleCall_10_0());
				}
				lv_contents_10_0=ruleInstruction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForRule());
					}
					add(
						$current,
						"contents",
						lv_contents_10_0,
						"com.opcoach.bugsy.xtext.BugsDsl.Instruction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getForAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleNumeric
entryRuleNumeric returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNumericRule()); }
	iv_ruleNumeric=ruleNumeric
	{ $current=$iv_ruleNumeric.current.getText(); }
	EOF;

// Rule Numeric
ruleNumeric returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getNumericAccess().getINTTerminalRuleCall());
	}
;

// Entry rule entryRuleValue
entryRuleValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current.getText(); }
	EOF;

// Rule Value
ruleValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getValueAccess().getNumericParserRuleCall_0());
		}
		this_Numeric_0=ruleNumeric
		{
			$current.merge(this_Numeric_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getValueAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterAccess().getParameterAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getValueValueParserRuleCall_1_0());
				}
				lv_value_1_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"com.opcoach.bugsy.xtext.BugsDsl.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	iv_ruleRelation=ruleRelation
	{ $current=$iv_ruleRelation.current; }
	EOF;

// Rule Relation
ruleRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getRelationAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationAccess().getRelationStochasticRelationParserRuleCall_1_0_0());
					}
					lv_relation_1_1=ruleStochasticRelation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationRule());
						}
						set(
							$current,
							"relation",
							lv_relation_1_1,
							"com.opcoach.bugsy.xtext.BugsDsl.StochasticRelation");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getRelationAccess().getRelationDeterministicRelationParserRuleCall_1_0_1());
					}
					lv_relation_1_2=ruleDeterministicRelation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationRule());
						}
						set(
							$current,
							"relation",
							lv_relation_1_2,
							"com.opcoach.bugsy.xtext.BugsDsl.DeterministicRelation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleStochasticRelation
entryRuleStochasticRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStochasticRelationRule()); }
	iv_ruleStochasticRelation=ruleStochasticRelation
	{ $current=$iv_ruleStochasticRelation.current; }
	EOF;

// Rule StochasticRelation
ruleStochasticRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStochasticRelationAccess().getStochasticRelationAction_0(),
					$current);
			}
		)
		otherlv_1='~'
		{
			newLeafNode(otherlv_1, grammarAccess.getStochasticRelationAccess().getTildeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStochasticRelationAccess().getDistribDensityEnumRuleCall_2_0());
				}
				lv_distrib_2_0=ruleDensity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStochasticRelationRule());
					}
					set(
						$current,
						"distrib",
						lv_distrib_2_0,
						"com.opcoach.bugsy.xtext.BugsDsl.Density");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='()'
			{
				newLeafNode(otherlv_3, grammarAccess.getStochasticRelationAccess().getLeftParenthesisRightParenthesisKeyword_3_0());
			}
			    |
			(
				otherlv_4='('
				{
					newLeafNode(otherlv_4, grammarAccess.getStochasticRelationAccess().getLeftParenthesisKeyword_3_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getStochasticRelationAccess().getParamsParameterParserRuleCall_3_1_1_0_0());
							}
							lv_params_5_0=ruleParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getStochasticRelationRule());
								}
								add(
									$current,
									"params",
									lv_params_5_0,
									"com.opcoach.bugsy.xtext.BugsDsl.Parameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_6=','
						{
							newLeafNode(otherlv_6, grammarAccess.getStochasticRelationAccess().getCommaKeyword_3_1_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getStochasticRelationAccess().getParamsParameterParserRuleCall_3_1_1_1_1_0());
								}
								lv_params_7_0=ruleParameter
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getStochasticRelationRule());
									}
									add(
										$current,
										"params",
										lv_params_7_0,
										"com.opcoach.bugsy.xtext.BugsDsl.Parameter");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)
				otherlv_8=')'
				{
					newLeafNode(otherlv_8, grammarAccess.getStochasticRelationAccess().getRightParenthesisKeyword_3_1_2());
				}
			)
		)?
	)
;

// Entry rule entryRuleDeterministicRelation
entryRuleDeterministicRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeterministicRelationRule()); }
	iv_ruleDeterministicRelation=ruleDeterministicRelation
	{ $current=$iv_ruleDeterministicRelation.current; }
	EOF;

// Rule DeterministicRelation
ruleDeterministicRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDeterministicRelationAccess().getDeterministicRelationAction_0(),
					$current);
			}
		)
		(
			otherlv_1='<-'
			{
				newLeafNode(otherlv_1, grammarAccess.getDeterministicRelationAccess().getLessThanSignHyphenMinusKeyword_1_0());
			}
			    |
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getDeterministicRelationAccess().getEqualsSignKeyword_1_1());
			}
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getDeterministicRelationAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDeterministicRelationAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDeterministicRelationAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getDeterministicRelationAccess().getDistribDistributionEnumRuleCall_2_0_0());
									}
									lv_distrib_4_0=ruleDistribution
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getDeterministicRelationRule());
										}
										set(
											$current,
											"distrib",
											lv_distrib_4_0,
											"com.opcoach.bugsy.xtext.BugsDsl.Distribution");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDeterministicRelationAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDeterministicRelationAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDeterministicRelationAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getDeterministicRelationAccess().getFunctionFunctionEnumRuleCall_2_1_0());
									}
									lv_function_5_0=ruleFunction
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getDeterministicRelationRule());
										}
										set(
											$current,
											"function",
											lv_function_5_0,
											"com.opcoach.bugsy.xtext.BugsDsl.Function");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDeterministicRelationAccess().getUnorderedGroup_2());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getDeterministicRelationAccess().getUnorderedGroup_2());
				}
		)
		(
			otherlv_6='()'
			{
				newLeafNode(otherlv_6, grammarAccess.getDeterministicRelationAccess().getLeftParenthesisRightParenthesisKeyword_3_0());
			}
			    |
			(
				otherlv_7='('
				{
					newLeafNode(otherlv_7, grammarAccess.getDeterministicRelationAccess().getLeftParenthesisKeyword_3_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getDeterministicRelationAccess().getParamsParameterParserRuleCall_3_1_1_0_0());
							}
							lv_params_8_0=ruleParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDeterministicRelationRule());
								}
								add(
									$current,
									"params",
									lv_params_8_0,
									"com.opcoach.bugsy.xtext.BugsDsl.Parameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_9=','
						{
							newLeafNode(otherlv_9, grammarAccess.getDeterministicRelationAccess().getCommaKeyword_3_1_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getDeterministicRelationAccess().getParamsParameterParserRuleCall_3_1_1_1_1_0());
								}
								lv_params_10_0=ruleParameter
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getDeterministicRelationRule());
									}
									add(
										$current,
										"params",
										lv_params_10_0,
										"com.opcoach.bugsy.xtext.BugsDsl.Parameter");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_11=')'
					{
						newLeafNode(otherlv_11, grammarAccess.getDeterministicRelationAccess().getRightParenthesisKeyword_3_1_1_2());
					}
				)?
			)
		)
	)
;

// Rule Distribution
ruleDistribution returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='dbern'
			{
				$current = grammarAccess.getDistributionAccess().getDbernEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDistributionAccess().getDbernEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='dbin'
			{
				$current = grammarAccess.getDistributionAccess().getDbinEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDistributionAccess().getDbinEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='dchisqr'
			{
				$current = grammarAccess.getDistributionAccess().getDchisqrEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDistributionAccess().getDchisqrEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='ddexp'
			{
				$current = grammarAccess.getDistributionAccess().getDdexpEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDistributionAccess().getDdexpEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='dexp'
			{
				$current = grammarAccess.getDistributionAccess().getDexpEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getDistributionAccess().getDexpEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='df'
			{
				$current = grammarAccess.getDistributionAccess().getDfEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getDistributionAccess().getDfEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='dgamma'
			{
				$current = grammarAccess.getDistributionAccess().getDgammaEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getDistributionAccess().getDgammaEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='dgen.gamma'
			{
				$current = grammarAccess.getDistributionAccess().getDgengammEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getDistributionAccess().getDgengammEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='dhyper'
			{
				$current = grammarAccess.getDistributionAccess().getDhyperEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getDistributionAccess().getDhyperEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='dlogis'
			{
				$current = grammarAccess.getDistributionAccess().getDlogisEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getDistributionAccess().getDlogisEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='dlnorm'
			{
				$current = grammarAccess.getDistributionAccess().getDlnormEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getDistributionAccess().getDlnormEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='dnegbin'
			{
				$current = grammarAccess.getDistributionAccess().getDnegbinEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getDistributionAccess().getDnegbinEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='dnchisqr'
			{
				$current = grammarAccess.getDistributionAccess().getDnchisqrEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getDistributionAccess().getDnchisqrEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='dpar'
			{
				$current = grammarAccess.getDistributionAccess().getDparEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getDistributionAccess().getDparEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='dpois'
			{
				$current = grammarAccess.getDistributionAccess().getDpoisEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getDistributionAccess().getDpoisEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='dt'
			{
				$current = grammarAccess.getDistributionAccess().getDtEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getDistributionAccess().getDtEnumLiteralDeclaration_15());
			}
		)
		    |
		(
			enumLiteral_16='dweib'
			{
				$current = grammarAccess.getDistributionAccess().getDweibEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_16, grammarAccess.getDistributionAccess().getDweibEnumLiteralDeclaration_16());
			}
		)
	)
;

// Rule Density
ruleDensity returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='dnorm'
			{
				$current = grammarAccess.getDensityAccess().getDnormEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDensityAccess().getDnormEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='dunif'
			{
				$current = grammarAccess.getDensityAccess().getDunifEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDensityAccess().getDunifEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='dbeta'
			{
				$current = grammarAccess.getDensityAccess().getDbetaEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDensityAccess().getDbetaEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule Function
ruleFunction returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='acos'
			{
				$current = grammarAccess.getFunctionAccess().getAcosEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getFunctionAccess().getAcosEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='acosh'
			{
				$current = grammarAccess.getFunctionAccess().getAcoshEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getFunctionAccess().getAcoshEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='asin'
			{
				$current = grammarAccess.getFunctionAccess().getAsinEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getFunctionAccess().getAsinEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='asinh'
			{
				$current = grammarAccess.getFunctionAccess().getAsinhEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getFunctionAccess().getAsinhEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='atan'
			{
				$current = grammarAccess.getFunctionAccess().getAtanEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getFunctionAccess().getAtanEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='log'
			{
				$current = grammarAccess.getFunctionAccess().getLogEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getFunctionAccess().getLogEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='exp'
			{
				$current = grammarAccess.getFunctionAccess().getEpEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getFunctionAccess().getEpEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='c'
			{
				$current = grammarAccess.getFunctionAccess().getCEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getFunctionAccess().getCEnumLiteralDeclaration_7());
			}
		)
	)
;

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
