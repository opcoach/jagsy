grammar com.opcoach.bugsy.xtext.BugsDsl with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate bugsDsl "http://www.opcoach.com/bugsy/xtext/BugsDsl"

BugsModel:
	{BugsModel}
	'model' '{'
	instructions+=Instruction*
	'}';

@ Override terminal SL_COMMENT:
	'#' !('\n' | '\r')* ('\r'? '\n')?;
@ Override terminal ID:
	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '.' | '0'..'9')*;

	//.................................
// Starting grammar definition 
//.................................
Instruction:
	For | Relation;

For:
	{For} 'for' '(' variable=ID 'in' range=ForRange ')' '{' instructions+=Instruction* '}';

Numeric:
	INT | Float;

Index:
	INT | ID;

ForRange : low=Index ':' high=Index;

ArrayRange : low=Index (':' high=Index)?;

Float returns ecore::EFloat:
	INT '.' INT ('E' ('+' | '-') INT)?;

Value:
	{Value} value=Numeric | id=ArrayID;

ArrayID:
	name=ID ('[' indexes+=ArrayRange (',' (indexes+=ArrayRange))* ']')?;

Relation:
	StochasticRelation | DeterministicRelation;

StochasticRelation:
	{StochasticRelation} name=ArrayID '~' distrib=Density ('()' | '(' ((params+=Expression) (',' (params+=Expression))*)
	')')?;

DeterministicRelation:
	{DeterministicRelation} name=ArrayID ('<-' | '=') (=> expressions+=Expression);

Operator:
	'+' | '-' | '*' | '/';

Function:
	operation=FunctionOperator ('()' | '(' (=> (params+=Expression) (',' (params+=Expression))* ')')?);

Distribution:
	distrib=DistributionOperator ('()' | '(' (=> (params+=Expression) (',' (params+=Expression))* ')')?);

Expression:
	TerminalExpression ({Expression.left=current} op=Operator
	right=TerminalExpression)*;

TerminalExpression returns Expression:
	'(' Expression ')' | (value=Value) | (function=Function) | (distribution=Distribution);

enum DistributionOperator:
	dbern='dbern' | dbin='dbin' | dchisqr='dchisqr' | ddexp='ddexp' | dexp='dexp' | df='df' |
	dgengamm='dgen.gamma' | dhyper='dhyper' | dlogis='dlogis' | dlnorm='dlnorm' | dnegbin='dnegbin' | dnchisqr='dnchisqr'
	| dpar='dpar' | dpois='dpois' | dt='dt' | dweib='dweib';

enum Density:
	dnorm='dnorm' | dunif='dunif' | dbeta='dbeta' | dgamma='dgamma';

enum FunctionOperator:
	acos='acos' | acosh='acosh' | asin='asin' | asinh='asinh' | atan='atan' | log='log' | ep='exp' | c='c' | mean='mean' |
	sqrt='sqrt';


